exit
index_hash["Shakespeare"]
index_hash["email"]
c
index_hash
eval h
h
exit
grades
grades["Test"] = 1
grades = Hash.new
exit
word
index_hash[word]
word
index_hash
word
c
exit
c
file
exit
eval h
h
file
exit
file
file.class
file.to_h
file.to_hash
file
exit
file.class
file
the_file
exit
f.class
f.public_methods
f.line
eval f
eval h
h
exit
eval h
h
output
exit
output << 4.to_s
output << 4.to_string
output << 4.to_str
output << 4
output << "b"
output << "l"
output
exit
_index
letter
exit
exi
c
letter
exit
strInput[_index - 1]
strInput[_index]
exit
strInput[_index]
strInput
_index
exit
eval n
n
exit
worklist
worklist.size
exit
base
c
base
c
base
index
total
exit
starting_index
base
xworklist = [[1,1]]
xworklist
xworklist.shift
xworklist = [[1,1]]
starting_index
base
exit
worklist
exit
eval worklist
worklist
c
amount
denominations
remaining_amount
coins
amount
exit
wrd
coins
amount
denominations
coins
amount
denominations
remaining_amount
coins
exit
c
exit
worklist
parents
parents[amount]
amount
worklist
starting_index
base
basse
exit
input
denominations
c
coins
eval n
c
eval n
n
input
c
value
coins
input
exit
input
coins
value
c
input[6]
input[7]
input.length
value
c
coins
exit
coins
c
input
value
exit
c
denominations
amount
exit
amount
denominations
amount
c
eval n
n
nums
exit
nums
eval n
c
n
c
products
c
exit
products
c
products
c
products
exit
products
exit
c
exit
a
target
a
a[2]
a[1]
a[0]
a[1][0]
!!target.match(/#{a[0]} #{a[1][0]} #{a[2]}/)
target
a
a[2]
a[1]
a[0]
a
c
exit
target
a
c
a
target
c
exit
exi
c
n
a
target
c
target
aa
exit
exxit
a[1][1]
a[1]
a
exit
a
exit
a[1][1] != nil
a[1][1] == nil
a
exit
a
c
exit
a[1]
a[1][1]
a
exit
a
a[1][1]
a[1]
c
parents[amount]
amount
parents
c
exit
output.inject(0){|sum,x| sum + x }
output.sum
output
exit
a
a.floor
exit
dp_table
dp_table[value]
c
dp_table[value]
exit
dp_table[value]
