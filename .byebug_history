c
exit
amount
c
amount
c
cc
c
exit
c
cc
c
cc
c
exit
denominations[indx] <= amount
denominations[indx]
denominations.length
indx
exit
coins
c
exit
coins
c
amount
coins
c
d
c
d
c
exit
d[i-1][j-1]+1
d[i][j-1]+1
d[i-1][j]+1
d[i-1][j]
d[i][j]
d[i]
exit
d
exit
d
exit
d
c
d
operation_array
c
d
exit
d
c
d
c
grid
c
grid
exit
grid
exit
grid
c
long_word
long
c
d
exit
grid
c
exit
d
c
exit
d
exit
d[0]
d
exit
word1.chars.sort.join
word1.chars.sort.join!
word1
exit
word1
word2
exit
exi
[strWord1, strWord2].max_by(&:length)
c
char_num
y
exit
strWord2
strWord1
char_num.size
char_num
c
['one','two','three','four','five'].select{|char_num| char_num.size.max} 
c
self
candidate
exit
alias_array
c
alias_array
_alias
c
alias_array
c
alias_array
exit
c
query.to_string
query
exit
query.to_string
query
c
name_array[1].to_array
name_array[1]
name_array
c
query.to_array
query.full
query
exit
candidate_a[0]
candidate_a
c
name_array
c
name_array
exit
name_array
c
name_array
exit
query_array
exit
name_array
exit
name_array
exit
exti
c
query_array
n
candidate
exit
c
candidate
exit
x
name_array
c
name_array
c
cc
c
name_array
exit
name_array[1]
name_array[0]
name_arry[0]
name_arry[1]
name_array
c
d
arr.to_hash
arr.to_h
arr.push([9,3,5])
arr.push([9,3,5]
arr.to_h
arr = [[0,2],[3,4],[8,5]]
exit
exi
c
line
c
line
exit
f.to_s
f.to_string
f[0]
line
c
line
exit
f.public_methods
file
f.class
exit
line
file[0]
file.class
line
line[0]
c
line[0]
line
c
line
c
line
c
line
n
line
c
f.public_methods
f[90]
f.size
c
x.to_hash
x.to_h
x = [3,4]
intDenominations.to_hash
intDenominations.to_h
intDenominations
exit
c
candidate_a.length
candidate_a
candidate
eval i
i
c
exit
c_b
c
candidate_a[j]
candidate_a[j] == candidate_b[j]
exit
c
cc
c
exit
c
c_b.length
c
candidate_a[j]
c
candidate_a[i]
candidate_a
exit
candidate_a
exit
exi
c_a
c_A
eval c_b
eval i
i
exit
eval candidate_b
c
