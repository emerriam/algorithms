exit
c
cc
c
word[0]
word
exit
nums
current_sum_window
c
exit
eval i + k
eval k
eval i
exit
avg_hash
exit
avg_hash
c
avg_hash
c
avg_hash
exit
avg_hash
c
avg_hash
exit
avg_hash
exit
avg_hash
exit
avg_hash
c
avg_hash
c
avg_hash
c
avg_hash
exit
avg_hash
c
avg_hash
exit
c
exit
c
nums.size
eval i
i
exit
subarray
n
subarray
n
c
subarray
n
eval i+k
eval nums.size
eval i+k
eval k
eval i
c
exit
temp_hash
sorted.keys.last
c
sorted
c
sorted
c
cc
c
temp_hash
c
exit
temp_hash
sorted
c
exit
sorted
exit
sorted
exit
temp_hash
temp_array
c
temp_hash
exit
sorted
exit
nums[1]
nums[0]
nums[i]
eval k
c
exit
nums[i+(k-1)].to_f
c
nums[i+(k-1)].to_f
c
nums[i+(k-1)].to_f
c
nums[i+(k-1)].to_f
c
nums[i+(k)].to_f
nums[i+(k-1)].to_f
exit
c
exit
sorted
c
subarray
exit
nums[i,i+4]
nums[i,i+3]
subarray
exit
nums[i+3]
c
nums[i+3]
subarray
exit
sorted
c
exit
sorted
pp sorted
exit
exi
sorted.last
sorted.lasta
exit
temp_hash
exit
temp_hash.last
temp_hash
exit
exig
66 / 4
k
total
n
sum
n
c
nums
c
exit
address.split('')
address
exit
address.split('')
address
c
2^31
output < 2^31
output > 2^31
output > -2^31
output < -2^31
output
exit
eval j
eval i 
c
eval j
eval i
c
eval j
eval i
c
eval i
eval j
c
exit
needle.size
eval j
eval i
c
needle.size
eval j
eval i
exit
eval j
eval i
i
c
exit
c
cc
c
exit
@store_hash[2]
latest[0]
latest
c
latest
c
latest
c
latest
n
where
n
c
@index_hash.sort.last
@index_hash.sort
c
cache.get(2)
cache.get(1)
cache(0)
cache[0]
cache.size
cache.print
cache
exit
output
exit
returnval.shift
returnval
exit
o.reverse!
o
exit
c
split_words
exit
this_word
c
this_word
c
this_word
c
this_word
c
this_word
c
exit
this_word
c
this_word
exit
this_word
c
eval s
s
c
this_word
c
output_array
exit
c
this_word
c
this_word
c
