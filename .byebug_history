exit
eval n
n
exit
worklist
worklist.size
exit
base
c
base
c
base
index
total
exit
starting_index
base
xworklist = [[1,1]]
xworklist
xworklist.shift
xworklist = [[1,1]]
starting_index
base
exit
worklist
exit
eval worklist
worklist
c
amount
denominations
remaining_amount
coins
amount
exit
wrd
coins
amount
denominations
coins
amount
denominations
remaining_amount
coins
exit
c
exit
worklist
parents
parents[amount]
amount
worklist
starting_index
base
basse
exit
input
denominations
c
coins
eval n
c
eval n
n
input
c
value
coins
input
exit
input
coins
value
c
input[6]
input[7]
input.length
value
c
coins
exit
coins
c
input
value
exit
c
denominations
amount
exit
amount
denominations
amount
c
eval n
n
nums
exit
nums
eval n
c
n
c
products
c
exit
products
c
products
c
products
exit
products
exit
c
exit
a
target
a
a[2]
a[1]
a[0]
a[1][0]
!!target.match(/#{a[0]} #{a[1][0]} #{a[2]}/)
target
a
a[2]
a[1]
a[0]
a
c
exit
target
a
c
a
target
c
exit
exi
c
n
a
target
c
target
aa
exit
exxit
a[1][1]
a[1]
a
exit
a
exit
a[1][1] != nil
a[1][1] == nil
a
exit
a
c
exit
a[1]
a[1][1]
a
exit
a
a[1][1]
a[1]
c
parents[amount]
amount
parents
c
exit
output.inject(0){|sum,x| sum + x }
output.sum
output
exit
a
a.floor
exit
dp_table
dp_table[value]
c
dp_table[value]
exit
dp_table[value]
dp_table
c
dp_table[value]
dp_table
exit
dp_table[value]
value
exit
value
[value]
dp_table
c
eval i
i
j
exit
c
denominations[i]
exit
eval i
i
exit
c
exit
c
dp_table
dp_table[i]
exit
c
denominations[i]
eval i
i
j
exit
eval i
i
j
exit
c
exit
dp_table
c
dp_table
c
exit
amount
c
amount
c
cc
c
exit
c
cc
c
cc
c
exit
denominations[indx] <= amount
denominations[indx]
denominations.length
indx
exit
coins
c
exit
coins
c
