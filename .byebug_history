exit
c
n
node.value == root_val
node.value == root.value
root_val
node.right
node.left
node.value
counter
c
n
node.value
node.val
root_val
node.right.value
node.left.value
node.value
c
node
c
node.left.right
node.left.left
node.right
node.left
node
exit
ewxi
ewxit
root
c
node
c
exit
c
right
left
exit
root.left.value
root.right.value
root.right
root.value
root
root.val
exit
root.children?
root.children
root.left
root.left.right
root.left.left
root.left
root
c
node
n
exit
root
c
root
c
exit
nodes
str
c
exit
arr.split(".")
arr = "1.2.3.4.5"
arr.split(".")
arr
x = arr.strip
c
exit
nodes.length
str
_str
nodes
str
nodes.each
nodes.split(".")
nodes
str
c
arr.split(".")
arr
x = arr.split(".")
arr.split(".")
arr
c
nodes.length
nodes
exit
nodes
str.split("")
nodes.length
str
c
str
n
str
exit
createTree(arr)
arr
exit
count
exit
count
exit
count
coutn
exit
count
exit
self.left
self.children?
c
self.left.value == self.right.value
self.right.value
self.right
self.left
self.children?
exit
self.children?
self
c
n
exit
self.left.value == self.right.value
children?
self.left.value
self
exit
count
c
exit
count
c
count
exit
count[1].value
count[0].value
count
c
count[0]
count
exit
eval count[1]
eval count[0]
eval count
exit
last_node
count
c
node_array.count
node_array
exit
node_array
c
found_nodes.count
found_nodes
c
exit
found_nodes
exit
node_array
foundnodes
exit
foundcount
foundnodes.count
foundnodes
exit
found_nodes.first
found_nodes.size
node_array
node_Array
exit
c
node.left
node
exit
n
foundnodes
found_nodes
c
n
c
target
exit
node_array
node_array[0].class
node_array
found_nodes[0]
found_nodes
node_array
c
exit
node_array[0]
node_array
found_nodes
node_array
exit
found_nodes
c
exit
found_nodes
node_array
c
final_result.count
final_result[0]
final_result
final_esult
exit
c
final_result
output_result
node
c
exit
final_result[2]
final_result[1]
final_result[1].left
final_result[0].left
final_result[0]
final_result
c
exit
output_result[0]
output_result
c
output_result[0]
exit
output_result.class
output_result.size
output_result
c
found_nodes
node_array
c
node
c
found_nodes
node_array
exit
foundone
exit
node_array
node_rray
n
c
exit
visited_stack
exit
c
n
eval break
break
exit
