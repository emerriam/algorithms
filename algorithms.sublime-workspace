{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"end",
				"each_with_index"
			],
			[
				"I",
				"I"
			],
			[
				"parseSubse",
				"parseSubsetsRecurse"
			],
			[
				"entry",
				"parse_entry"
			],
			[
				"item_value",
				"item_value"
			],
			[
				"is",
				"isconnected"
			],
			[
				"bytes",
				"bytesremaining"
			],
			[
				"leader",
				"leadership_skill_hstore"
			],
			[
				"find_by",
				"find_by_abbreviation"
			],
			[
				"Sof",
				"SoftTranslationE5E9"
			],
			[
				"ema",
				"old_email"
			],
			[
				"padd",
				"padding-left"
			],
			[
				"update_user_",
				"update_user_skill_caches"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Where did Plato get his information of Atlantis from since you are expert enough to make claims against what others claim? Also the measurement of the eye and Platos Atlantis match up, off by only a few feet. Even mainstream Archeologists are starting to come around to the idea of pre flood, advanced civilization. You on the other hand are throwing shade on Jimmy but are worried about what people have to say against your opinion of Jimmy's work. It is to be noted that Herodotus made a map before Plato was even born, showing the known world. Who was the first king of the Mauri people in the location of the eye? His name was Atlas. Weird being Poseidon's first born who ruled over Atlantis was named...Atlas(Atlantis meaning the city of Atlas. What about the name of those mountains....Atlas. The story of Atlantis comes from Egypt by way of Solon. It seems to me you are trying to discount a fragmenting comet struck the earth 12,980 years ago give or take a few years, throwing the earth into the Younger Dryas for 1200 years(which was a mini ice age). A fragmenting comet will have multiple peices failing in multiple locations. North America, Greenland. The Atlantic possibly? Ice cores are hard to dismiss there Mr. Shade tree. The couple that came up with this whole theory are pioneers unlike yourself. While people are out here trying to find the origins of our species here you are throwing shade trying to discount any possibility that they are right. There have been many less convincing archaeological finds claiming to be Atlantis. The timeline that we humans go by has to and will be rewritten in due time. \"Experts\" don't like it when someone without a degree in archaeology finds something they have overlooked. So in turn they try to discredit anything and everything possible to poke holes in their theory. Then there are people like you...",
			"settings":
			{
				"buffer_size": 1864,
				"line_ending": "Unix",
				"name": "Where did Plato get his information of Atlantis fr"
			}
		},
		{
			"contents": "Everything you said is pure nonsense. First - this is how science works. You make a claim, put forward a series of arguments, and other people do their best to rip it to shreds. If the hypothesis survives, then it is worth something. I am simply pointing out fatal flaws in Jimmy's arguments.\n\nPlato, quite simply, made up the stories of Atlantis (I don't know that we can rule out any cultural inspiration). It seems clear from the record that none of his contemporaries took his stories to be an actual historical claim. It would be like me referring to Robin Hood in order to make a point.\n\nAnd experts like it just fine when someone comes up with a new idea. If there were anything to Jimmy's claim, then actual archaeologists would be all over it. What they would likely do is grab all the credit for themselves. But they would not ignore a genuine lead to finding f**king Atlantis if they thought it was worth anything. They would be famous, their careers would be made, and if they had to give credit to some amateur for pointing it out, so what. It's like the girl who found the sword - thanks kid, now step aside so we can do some real science.\n\nAnd again - all the push back in the comments is trying desperately to distract from the only things that matter:\n1 - there is zero physical evidence of Atlantis\n2 - The lines of argument being offered are all extremely weak, an example of trying to present superficial similarities as if they are highly specific when they are not, and ignoring major problems. It's just terrible science.\n\nSo stop all the whining about \"experts\" and being open minded and throwing shade and other nonsense. It's meaningless. Use this as an opportunity to learn a little bit about how science actually works.",
			"settings":
			{
				"buffer_size": 1747,
				"line_ending": "Unix",
				"name": "Everything you said is pure nonsense. First - this"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 444.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"ls",
			"help",
			"bash",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Eric/Github_master/algorithms"
	],
	"file_history":
	[
		"/Users/Eric/Github_master/ParkingGarage/db/migrate/20181104172403_create_parking_spaces.rb",
		"/Users/Eric/Github_master/ParkingGarage/app/controllers/application_controller.rb",
		"/Users/Eric/Github_master/ParkingGarage/app/models/parking_space.rb",
		"/Users/Eric/Github_master/ParkingGarage/config/routes.rb",
		"/Users/Eric/Github_master/algorithms/parking_lot.rb",
		"/Users/Eric/Github_master/ParkingGarage/app/controllers/parking_spaces_controller.rb",
		"/Users/Eric/Github_master/streetlights/Streetlights/app/models/light.rb",
		"/Users/Eric/Github_master/bridge/app/controllers/avatars_controller.rb",
		"/Users/Eric/Github_master/ParkingGarage/app/controllers/parking_space_controller.rb",
		"/Users/Eric/Github_master/algorithms/count_ways_to_climb.rb",
		"/Users/Eric/Github_master/algorithms/levenshtein_distance2.rb",
		"/Users/Eric/Github_master/algorithms/make_change.rb",
		"/Users/Eric/Github_master/bridge/app/controllers/contact_infos_controller.rb",
		"/Users/Eric/Github_master/algorithms/fibonacci.rb",
		"/Users/Eric/Github_master/algorithms/levenshtein_distance.rb",
		"/Users/Eric/Github_master/algorithms/scrap.rb",
		"/Users/Eric/Github_master/algorithms/spiral.rb",
		"/Users/Eric/Github_master/algorithms/word_reverse.rb",
		"/Users/Eric/Github_master/algorithms/palindrome_strings.rb",
		"/Users/Eric/Github_master/algorithms/alien_dictionary.rb",
		"/Users/Eric/Github_master/algorithms/my_graph.rb",
		"/Users/Eric/Github_master/algorithms/assistant.rb",
		"/Users/Eric/Github_master/algorithms/single_value_tree.rb",
		"/Users/Eric/Github_master/algorithms/my_trie.rb",
		"/Users/Eric/Github_master/algorithms/knights_tour.rb",
		"/Users/Eric/Github_master/algorithms/zombie_cluster.rb",
		"/Users/Eric/Github_master/algorithms/knights_tour_rosetta.rb",
		"/Users/Eric/Github_master/algorithms/graph_top_sort.rb",
		"/Users/Eric/Github_master/algorithms/graphs_test.rb",
		"/Users/Eric/Github_master/algorithms/nuts_and_bolts.rb",
		"/Users/Eric/Github_master/algorithms/string_transform_graph.rb",
		"/Users/Eric/Github_master/algorithms/my_tree.rb",
		"/Users/Eric/Github_master/algorithms/keys_and_doors.rb",
		"/Users/Eric/Github_master/algorithms/print_all_paths.rb",
		"/Users/Eric/Github_master/algorithms/upside_down.rb",
		"/Users/Eric/Github_master/algorithms/week3.rb",
		"/Users/Eric/Github_master/algorithms/week3b.rb",
		"/Users/Eric/Github_master/algorithms/week3c.rb",
		"/Users/Eric/Github_master/algorithms/binary_tree.rb",
		"/Users/Eric/Github_master/algorithms/scrap.c",
		"/Users/Eric/Github_master/algorithms/countpaths.rb",
		"/Users/Eric/Github_master/algorithms/binary_search_trees.rb",
		"/Users/Eric/Github_master/algorithms/recursion2.rb",
		"/Users/Eric/Github_master/algorithms/find_all_arrangements.rb",
		"/Users/Eric/Github_master/algorithms/scrap.java",
		"/Users/Eric/Github_master/algorithms/subsets.rb",
		"/Users/Eric/Github_master/algorithms/week_2a_test.rb",
		"/Users/Eric/Github_master/algorithms/palindrome.rb",
		"/Users/Eric/Github_master/algorithms/week_2_test.rb",
		"/Users/Eric/Github_master/algorithms/notes.txt",
		"/Users/Eric/Github_master/algorithms/qsort.rb",
		"/Users/Eric/Github_master/algorithms/group_the_numbers.rb",
		"/Users/Eric/Github_master/algorithms/heapsort.rb",
		"/Users/Eric/Github_master/algorithms/mergesort.rb",
		"/Users/Eric/Github_master/algorithms/extract_info.rb",
		"/Users/Eric/Github_master/algorithms/recursion.rb",
		"/Users/Eric/Github_master/algorithms/tests.rb",
		"/Users/Eric/Github_master/algorithms/top_k.rb",
		"/Users/Eric/Github_master/algorithms/three_sum.rb",
		"/Users/Eric/random_notes.txt",
		"/Users/Eric/Github_master/algorithms/merge_k_arrays.rb",
		"/Users/Eric/Github_master/algorithms/extract_info.txt",
		"/Users/Eric/Github_master/algorithms/nuts_and_bolts.txt",
		"/Users/Eric/Github_master/spiral_travel/lecture_notes.txt",
		"/Users/Eric/Github_master/spiral_travel/mergesort.rb",
		"/Users/Eric/Github_master/spiral_travel/classwork.rb",
		"/Users/Eric/Github_master/spiral_travel/nuts_and_bolts.rb",
		"/Users/Eric/Github_master/spiral_travel/scrap.rb",
		"/Users/Eric/Github_master/spiral_travel/heapsort.rb",
		"/Users/Eric/Github_master/spiral_travel/qsort.rb",
		"/Users/Eric/Github_master/spiral_travel/untitled.rb",
		"/Users/Eric/Github_master/spiral_travel/backup.rb",
		"/Users/Eric/Github_master/spiral_travel/test.txt",
		"/Users/Eric/Github_master/clover_health/file_parser.rb",
		"/Users/Eric/Github_master/spiral_travel/README.md",
		"/Users/Eric/Github_master/spiral_travel/spiral_travel.rb",
		"/Users/Eric/Github_master/spiral_travel/spiral_travel_ii.rb",
		"/Users/Eric/Library/Application Support/RimWorld/Saves/HisyouEDIT2.rws",
		"/Users/Eric/Library/Application Support/RimWorld/Saves/HisyouEDITME.rws",
		"/Users/Eric/Github_master/clover_health/file_parser_test.rb",
		"/Users/Eric/Github_master/clover_health/database.rb",
		"/Users/Eric/Github_master/file_parser/README.md",
		"/Users/Eric/Github_master/clover_health/README.md",
		"/Users/Eric/Github_master/clover_health/data/testformat1_2015-06-28.txt",
		"/Users/Eric/Github_master/clover_health/specs/testformat1.csv",
		"/Users/Eric/Github_master/bridge/app/policies/employers_controller_policy.rb",
		"/Users/Eric/Github_master/clover_health/file_parser\nfile_parser_test.rb",
		"/Users/Eric/Github_master/file_parser/db/seeds.rb",
		"/Users/Eric/Github_master/file_parser/file_parse.rb",
		"/Users/Eric/Github_master/walker/leader_board.rb",
		"/Users/Eric/Github_master/file_parser/your_code.rb",
		"/Users/Eric/Github_master/file_parser/vet.rb",
		"/Users/Eric/Github_master/file_parser/test/data_file_test.rb",
		"/Users/Eric/Github_master/file_parser/config/application.rb",
		"/Users/Eric/Github_master/file_parser/app/models/example_table.rb",
		"/Users/Eric/Github_master/file_parser/app/models/application_record.rb",
		"/Users/Eric/Github_master/file_parser/Gemfile",
		"/Users/Eric/Github_master/file_parser/file_parser_keep.rb",
		"/Users/Eric/Github_master/file_parser/test/models/example_table_test.rb",
		"/Users/Eric/Github_master/file_parser/specs/testformat1.csv",
		"/Users/Eric/Github_master/bridge/db/schema.rb",
		"/Users/Eric/Github_master/file_parser/test/application_system_test_case.rb",
		"/Users/Eric/Github_master/bridge/db/migrate/20170217020136_create_avatars.rb",
		"/Users/Eric/Github_master/file_parser/file_parser.rb",
		"/Users/Eric/Github_master/file_parser/db/migrate/20180607160754_create_example_tables.rb",
		"/Users/Eric/Github_master/bridge_old/app/controllers/custom_skills_controller.rb",
		"/Users/Eric/Github_master/bridge/app/mixins/summary_page.rb",
		"/Users/Eric/Github_master/bridge/app/policies/active_admin_policy.rb",
		"/Users/Eric/Github_master/bridge/app/policies/admin_tools/home_controller_policy.rb",
		"/Users/Eric/Github_master/file_parser/config/database.yml",
		"/Users/Eric/Github_master/walker/input_file.csv",
		"/Users/Eric/Github_master/file_parser/data/testformat1_2015-06-28.txt",
		"/Users/Eric/Github_master/bridge/config/database.yml",
		"/Users/Eric/Github_master/algorithms/comma_insert.rb",
		"/Users/Eric/Github_master/algorithms/examples.rb",
		"/Users/Eric/Github_master/walker/examples.rb",
		"/Users/Eric/Github_master/walker/leader_board_tests.rb",
		"/Users/Eric/Github_master/calldibs/db/seeds.rb",
		"/Users/Eric/Documents/Paradox Interactive/Crusader Kings II/save games/autosave.ck2",
		"/Users/Eric/Github_master/bridge/app/services/rapidfire/question_form.rb",
		"/Users/Eric/Github_master/bridge/spec/modules/data_ingest_module_spec.rb",
		"/Users/Eric/Github_master/doximity/dox-blog/db/seeds.rb",
		"/Users/Eric/Github_master/doximity/dox-blog/db/data/articles.csv",
		"/Users/Eric/Library/Application Support/RimWorld/Saves/Smalltown-by-the-cave.rws",
		"/Users/Eric/Github_master/stack-server/stack-server.rb",
		"/Users/Eric/Github_master/stack-server/stack.rb",
		"/Users/Eric/Github_master/stack-server/stack_server_original.rb",
		"/Users/Eric/Github_master/stack-server/stack-test.rb"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 133.0,
		"where_history":
		[
			"/Users/Eric/Github_master/algorithms/spiral.rb",
			"/Users/Eric/Github_master/algorithms/",
			"/Users/Eric/Github_master/algorithms/trie.rb",
			"/Users/Eric/Github_master/algorithms/knights_tour.rb",
			"/Users/Eric/Github_master/algorithms",
			"/Users/Eric/Github_master/algorithms/scrap.rb",
			"/Users/Eric/Github_master/algorithms",
			"<current file>",
			"<current file>,<open folders>",
			"<current file>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"joke",
			"@output",
			"@start_",
			"@end_",
			"@matrix",
			"Stack",
			"term",
			"word",
			"seen_po",
			"distance",
			"my_",
			"require",
			"include",
			"#",
			"map",
			"return ",
			"children?",
			"'#'",
			"#",
			" ",
			"create_binary_search_tree",
			"BinaryTree",
			"#",
			" ",
			"back_index",
			"front",
			"ary",
			"”",
			"“"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"output",
			"start_",
			"end_",
			"matrix",
			"terminates",
			"\\#",
			"nil",
			"'#'",
			",",
			"'#'",
			",",
			"right_index",
			"left_value",
			"arr",
			"\""
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1864,
						"regions":
						{
						},
						"selection":
						[
							[
								1864,
								1864
							]
						],
						"settings":
						{
							"auto_name": "Where did Plato get his information of Atlantis fr",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1747,
						"regions":
						{
						},
						"selection":
						[
							[
								1747,
								1747
							]
						],
						"settings":
						{
							"auto_name": "Everything you said is pure nonsense. First - this",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.434265221914,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 252.0
	},
	"output.find_results":
	{
		"height": 112.0
	},
	"output.unsaved_changes":
	{
		"height": 71.0
	},
	"pinned_build_system": "",
	"project": "algorithms.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"docum",
				"prototype/app/models/document_model.rb"
			],
			[
				"custom_skill_spec",
				"bridge/spec/models/custom_skill_spec.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"AbilityTest"
			]
		],
		"width": 676.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 238.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
