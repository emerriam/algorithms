{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"end",
				"each_with_index"
			],
			[
				"I",
				"I"
			],
			[
				"parseSubse",
				"parseSubsetsRecurse"
			],
			[
				"entry",
				"parse_entry"
			],
			[
				"item_value",
				"item_value"
			],
			[
				"is",
				"isconnected"
			],
			[
				"bytes",
				"bytesremaining"
			],
			[
				"leader",
				"leadership_skill_hstore"
			],
			[
				"find_by",
				"find_by_abbreviation"
			],
			[
				"Sof",
				"SoftTranslationE5E9"
			],
			[
				"ema",
				"old_email"
			],
			[
				"padd",
				"padding-left"
			],
			[
				"update_user_",
				"update_user_skill_caches"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 444.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"ls",
			"help",
			"bash",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/Eric/Github_master/algorithms/dangerous_spreadsheets.rb",
		"/Users/Eric/Github_master/algorithms/dangerous_spreadsheets_human.rb",
		"/Users/Eric/Github_master/algorithms/subsets.rb",
		"/Users/Eric/Github_master/algorithms/three_sum.rb",
		"/Users/Eric/Github_master/algorithms/binary_tree.rb",
		"/Users/Eric/Github_master/algorithms/find_all_arrangements.rb",
		"/Users/Eric/Github_master/algorithms/test.rb",
		"/Users/Eric/Github_master/ParkingGarage/db/migrate/20181104172403_create_parking_spaces.rb",
		"/Users/Eric/Github_master/ParkingGarage/app/controllers/application_controller.rb",
		"/Users/Eric/Github_master/ParkingGarage/app/models/parking_space.rb",
		"/Users/Eric/Github_master/ParkingGarage/config/routes.rb",
		"/Users/Eric/Github_master/algorithms/parking_lot.rb",
		"/Users/Eric/Github_master/ParkingGarage/app/controllers/parking_spaces_controller.rb",
		"/Users/Eric/Github_master/streetlights/Streetlights/app/models/light.rb",
		"/Users/Eric/Github_master/bridge/app/controllers/avatars_controller.rb",
		"/Users/Eric/Github_master/ParkingGarage/app/controllers/parking_space_controller.rb",
		"/Users/Eric/Github_master/algorithms/count_ways_to_climb.rb",
		"/Users/Eric/Github_master/algorithms/levenshtein_distance2.rb",
		"/Users/Eric/Github_master/algorithms/make_change.rb",
		"/Users/Eric/Github_master/bridge/app/controllers/contact_infos_controller.rb",
		"/Users/Eric/Github_master/algorithms/fibonacci.rb",
		"/Users/Eric/Github_master/algorithms/levenshtein_distance.rb",
		"/Users/Eric/Github_master/algorithms/scrap.rb",
		"/Users/Eric/Github_master/algorithms/spiral.rb",
		"/Users/Eric/Github_master/algorithms/word_reverse.rb",
		"/Users/Eric/Github_master/algorithms/palindrome_strings.rb",
		"/Users/Eric/Github_master/algorithms/alien_dictionary.rb",
		"/Users/Eric/Github_master/algorithms/my_graph.rb",
		"/Users/Eric/Github_master/algorithms/assistant.rb",
		"/Users/Eric/Github_master/algorithms/single_value_tree.rb",
		"/Users/Eric/Github_master/algorithms/my_trie.rb",
		"/Users/Eric/Github_master/algorithms/knights_tour.rb",
		"/Users/Eric/Github_master/algorithms/zombie_cluster.rb",
		"/Users/Eric/Github_master/algorithms/knights_tour_rosetta.rb",
		"/Users/Eric/Github_master/algorithms/graph_top_sort.rb",
		"/Users/Eric/Github_master/algorithms/graphs_test.rb",
		"/Users/Eric/Github_master/algorithms/nuts_and_bolts.rb",
		"/Users/Eric/Github_master/algorithms/string_transform_graph.rb",
		"/Users/Eric/Github_master/algorithms/my_tree.rb",
		"/Users/Eric/Github_master/algorithms/keys_and_doors.rb",
		"/Users/Eric/Github_master/algorithms/print_all_paths.rb",
		"/Users/Eric/Github_master/algorithms/upside_down.rb",
		"/Users/Eric/Github_master/algorithms/week3.rb",
		"/Users/Eric/Github_master/algorithms/week3b.rb",
		"/Users/Eric/Github_master/algorithms/week3c.rb",
		"/Users/Eric/Github_master/algorithms/scrap.c",
		"/Users/Eric/Github_master/algorithms/countpaths.rb",
		"/Users/Eric/Github_master/algorithms/binary_search_trees.rb",
		"/Users/Eric/Github_master/algorithms/recursion2.rb",
		"/Users/Eric/Github_master/algorithms/scrap.java",
		"/Users/Eric/Github_master/algorithms/week_2a_test.rb",
		"/Users/Eric/Github_master/algorithms/palindrome.rb",
		"/Users/Eric/Github_master/algorithms/week_2_test.rb",
		"/Users/Eric/Github_master/algorithms/notes.txt",
		"/Users/Eric/Github_master/algorithms/qsort.rb",
		"/Users/Eric/Github_master/algorithms/group_the_numbers.rb",
		"/Users/Eric/Github_master/algorithms/heapsort.rb",
		"/Users/Eric/Github_master/algorithms/mergesort.rb",
		"/Users/Eric/Github_master/algorithms/extract_info.rb",
		"/Users/Eric/Github_master/algorithms/recursion.rb",
		"/Users/Eric/Github_master/algorithms/tests.rb",
		"/Users/Eric/Github_master/algorithms/top_k.rb",
		"/Users/Eric/random_notes.txt",
		"/Users/Eric/Github_master/algorithms/merge_k_arrays.rb",
		"/Users/Eric/Github_master/algorithms/extract_info.txt",
		"/Users/Eric/Github_master/algorithms/nuts_and_bolts.txt",
		"/Users/Eric/Github_master/spiral_travel/lecture_notes.txt",
		"/Users/Eric/Github_master/spiral_travel/mergesort.rb",
		"/Users/Eric/Github_master/spiral_travel/classwork.rb",
		"/Users/Eric/Github_master/spiral_travel/nuts_and_bolts.rb",
		"/Users/Eric/Github_master/spiral_travel/scrap.rb",
		"/Users/Eric/Github_master/spiral_travel/heapsort.rb",
		"/Users/Eric/Github_master/spiral_travel/qsort.rb",
		"/Users/Eric/Github_master/spiral_travel/untitled.rb",
		"/Users/Eric/Github_master/spiral_travel/backup.rb",
		"/Users/Eric/Github_master/spiral_travel/test.txt",
		"/Users/Eric/Github_master/clover_health/file_parser.rb",
		"/Users/Eric/Github_master/spiral_travel/README.md",
		"/Users/Eric/Github_master/spiral_travel/spiral_travel.rb",
		"/Users/Eric/Github_master/spiral_travel/spiral_travel_ii.rb",
		"/Users/Eric/Library/Application Support/RimWorld/Saves/HisyouEDIT2.rws",
		"/Users/Eric/Library/Application Support/RimWorld/Saves/HisyouEDITME.rws",
		"/Users/Eric/Github_master/clover_health/file_parser_test.rb",
		"/Users/Eric/Github_master/clover_health/database.rb",
		"/Users/Eric/Github_master/file_parser/README.md",
		"/Users/Eric/Github_master/clover_health/README.md",
		"/Users/Eric/Github_master/clover_health/data/testformat1_2015-06-28.txt",
		"/Users/Eric/Github_master/clover_health/specs/testformat1.csv",
		"/Users/Eric/Github_master/bridge/app/policies/employers_controller_policy.rb",
		"/Users/Eric/Github_master/clover_health/file_parser\nfile_parser_test.rb",
		"/Users/Eric/Github_master/file_parser/db/seeds.rb",
		"/Users/Eric/Github_master/file_parser/file_parse.rb",
		"/Users/Eric/Github_master/walker/leader_board.rb",
		"/Users/Eric/Github_master/file_parser/your_code.rb",
		"/Users/Eric/Github_master/file_parser/vet.rb",
		"/Users/Eric/Github_master/file_parser/test/data_file_test.rb",
		"/Users/Eric/Github_master/file_parser/config/application.rb",
		"/Users/Eric/Github_master/file_parser/app/models/example_table.rb",
		"/Users/Eric/Github_master/file_parser/app/models/application_record.rb",
		"/Users/Eric/Github_master/file_parser/Gemfile",
		"/Users/Eric/Github_master/file_parser/file_parser_keep.rb",
		"/Users/Eric/Github_master/file_parser/test/models/example_table_test.rb",
		"/Users/Eric/Github_master/file_parser/specs/testformat1.csv",
		"/Users/Eric/Github_master/bridge/db/schema.rb",
		"/Users/Eric/Github_master/file_parser/test/application_system_test_case.rb",
		"/Users/Eric/Github_master/bridge/db/migrate/20170217020136_create_avatars.rb",
		"/Users/Eric/Github_master/file_parser/file_parser.rb",
		"/Users/Eric/Github_master/file_parser/db/migrate/20180607160754_create_example_tables.rb",
		"/Users/Eric/Github_master/bridge_old/app/controllers/custom_skills_controller.rb",
		"/Users/Eric/Github_master/bridge/app/mixins/summary_page.rb",
		"/Users/Eric/Github_master/bridge/app/policies/active_admin_policy.rb",
		"/Users/Eric/Github_master/bridge/app/policies/admin_tools/home_controller_policy.rb",
		"/Users/Eric/Github_master/file_parser/config/database.yml",
		"/Users/Eric/Github_master/walker/input_file.csv",
		"/Users/Eric/Github_master/file_parser/data/testformat1_2015-06-28.txt",
		"/Users/Eric/Github_master/bridge/config/database.yml",
		"/Users/Eric/Github_master/algorithms/comma_insert.rb",
		"/Users/Eric/Github_master/algorithms/examples.rb",
		"/Users/Eric/Github_master/walker/examples.rb",
		"/Users/Eric/Github_master/walker/leader_board_tests.rb",
		"/Users/Eric/Github_master/calldibs/db/seeds.rb",
		"/Users/Eric/Documents/Paradox Interactive/Crusader Kings II/save games/autosave.ck2",
		"/Users/Eric/Github_master/bridge/app/services/rapidfire/question_form.rb",
		"/Users/Eric/Github_master/bridge/spec/modules/data_ingest_module_spec.rb",
		"/Users/Eric/Github_master/doximity/dox-blog/db/seeds.rb",
		"/Users/Eric/Github_master/doximity/dox-blog/db/data/articles.csv",
		"/Users/Eric/Library/Application Support/RimWorld/Saves/Smalltown-by-the-cave.rws",
		"/Users/Eric/Github_master/stack-server/stack-server.rb"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 133.0,
		"where_history":
		[
			"/Users/Eric/Github_master/algorithms/spiral.rb",
			"/Users/Eric/Github_master/algorithms/",
			"/Users/Eric/Github_master/algorithms/trie.rb",
			"/Users/Eric/Github_master/algorithms/knights_tour.rb",
			"/Users/Eric/Github_master/algorithms",
			"/Users/Eric/Github_master/algorithms/scrap.rb",
			"/Users/Eric/Github_master/algorithms",
			"<current file>",
			"<current file>,<open folders>",
			"<current file>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"joke",
			"@output",
			"@start_",
			"@end_",
			"@matrix",
			"Stack",
			"term",
			"word",
			"seen_po",
			"distance",
			"my_",
			"require",
			"include",
			"#",
			"map",
			"return ",
			"children?",
			"'#'",
			"#",
			" ",
			"create_binary_search_tree",
			"BinaryTree",
			"#",
			" ",
			"back_index",
			"front",
			"ary",
			"”",
			"“"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"output",
			"start_",
			"end_",
			"matrix",
			"terminates",
			"\\#",
			"nil",
			"'#'",
			",",
			"'#'",
			",",
			"right_index",
			"left_value",
			"arr",
			"\""
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 252.0
	},
	"output.find_results":
	{
		"height": 112.0
	},
	"output.unsaved_changes":
	{
		"height": 71.0
	},
	"pinned_build_system": "",
	"project": "algorithms.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"docum",
				"prototype/app/models/document_model.rb"
			],
			[
				"custom_skill_spec",
				"bridge/spec/models/custom_skill_spec.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"AbilityTest"
			]
		],
		"width": 676.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 238.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
